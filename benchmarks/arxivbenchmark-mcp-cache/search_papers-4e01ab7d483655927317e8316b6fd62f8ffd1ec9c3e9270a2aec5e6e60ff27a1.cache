{
  "total_results": 10,
  "papers": [
    {
      "id": "2211.02993v2",
      "title": "A row analogue of Hecke column insertion",
      "authors": [
        "Daoji Huang",
        "Mark Shimozono",
        "Tianyi Yu"
      ],
      "abstract": "We introduce a new row insertion algorithm on decreasing tableaux and\nincreasing tableaux, generalizing Edelman-Greene (EG) row insertion. Our row\ninsertion algorithm is a nontrivial variation of Hecke column insertion which\ngeneralizes EG column insertion. Similar to Hecke column insertion, our row\ninsertion is bijective and respects Hecke equivalence, and therefore recovers\nthe expansions of stable Grothendieck functions into Grassmannian stable\nGrothendieck functions.",
      "categories": [
        "math.CO",
        "05E05"
      ],
      "published": "2022-11-06T00:17:02+00:00",
      "url": "http://arxiv.org/pdf/2211.02993v2",
      "resource_uri": "arxiv://2211.02993v2"
    },
    {
      "id": "0705.2689v1",
      "title": "Binary Search Tree insertion, the Hypoplactic insertion, and Dual Graded Graphs",
      "authors": [
        "Janvier Nzeutchap"
      ],
      "abstract": "Fomin (1994) introduced a notion of duality between two graded graphs on the\nsame set of vertices. He also introduced a generalization to dual graded graphs\nof the classical Robinson-Schensted-Knuth algorithm. We show how Fomin's\napproach applies to the binary search tree insertion algorithm also known as\nsylvester insertion, and to the hypoplactic insertion algorithm.",
      "categories": [
        "math.CO",
        "05-06 ; 05E99"
      ],
      "published": "2007-05-18T12:41:32+00:00",
      "url": "http://arxiv.org/pdf/0705.2689v1",
      "resource_uri": "arxiv://0705.2689v1"
    },
    {
      "id": "cs/0407003v1",
      "title": "Insertion Sort is O(n log n)",
      "authors": [
        "Michael A. Bender",
        "Martin Farach-Colton",
        "Miguel Mosteiro"
      ],
      "abstract": "Traditional Insertion Sort runs in O(n^2) time because each insertion takes\nO(n) time. When people run Insertion Sort in the physical world, they leave\ngaps between items to accelerate insertions. Gaps help in computers as well.\nThis paper shows that Gapped Insertion Sort has insertion times of O(log n)\nwith high probability, yielding a total running time of O(n log n) with high\nprobability.",
      "categories": [
        "cs.DS",
        "E.5; F.2.2"
      ],
      "published": "2004-07-01T15:50:26+00:00",
      "url": "http://arxiv.org/pdf/cs/0407003v1",
      "resource_uri": "arxiv://cs/0407003v1"
    },
    {
      "id": "1006.2820v1",
      "title": "Effect of Distributed Shield Insertion on Crosstalk in Inductively Coupled VLSI Interconnects",
      "authors": [
        "Divya Mishra",
        "Shailendra Mishra",
        "Praggya Agnihotry",
        "B. K. Kaushik"
      ],
      "abstract": "Crosstalk in VLSI interconnects is a major constrain in DSM and UDSM\ntechnology. Among various strategies followed for its minimization, shield\ninsertion between Aggressor and Victim is one of the prominent options. This\npaper analyzes the extent of crosstalk in inductively coupled interconnects and\nminimizes the same through distributed shield insertion. Comparison is drawn\nbetween signal voltage and crosstalk voltage in three different conditions i.e.\nprior to shield insertion, after shield insertion and after additional ground\ntap insertion at shield terminal.",
      "categories": [
        "cs.OH"
      ],
      "published": "2010-06-14T19:52:49+00:00",
      "url": "http://arxiv.org/pdf/1006.2820v1",
      "resource_uri": "arxiv://1006.2820v1"
    },
    {
      "id": "2411.14771v3",
      "title": "Capacity Approximations for Insertion Channels with Small Insertion Probabilities",
      "authors": [
        "Busra Tegin",
        "Tolga M Duman"
      ],
      "abstract": "Channels with synchronization errors, exhibiting deletion and insertion\nerrors, find practical applications in DNA storage, data reconstruction, and\nvarious other domains. Presence of insertions and deletions render the channel\nwith memory, complicating capacity analysis. For instance, despite the\nformulation of an independent and identically distributed (i.i.d.) deletion\nchannel more than fifty years ago, and proof that the channel is information\nstable, hence its Shannon capacity exists, calculation of the capacity remained\nelusive. However, a relatively recent result establishes the capacity of the\ndeletion channel in the asymptotic regime of small deletion probabilities by\ncomputing the dominant terms of the capacity expansion. This paper extends that\nresult to binary insertion channels, determining the dominant terms of the\nchannel capacity for small insertion probabilities and establishing capacity in\nthis asymptotic regime. Specifically, we consider two i.i.d. insertion channel\nmodels: insertion channel with possible random bit insertions after every\ntransmitted bit and the Gallager insertion model, for which a bit is replaced\nby two random bits with a certain probability. To prove our results, we build\non methods used for the deletion channel, employing Bernoulli(1/2) inputs for\nachievability and coupling this with a converse using stationary and ergodic\nprocesses as inputs, and show that the channel capacity differs only in the\nhigher order terms from the achievable rates with i.i.d. inputs. The results,\nfor instance, show that the capacity of the random insertion channel is higher\nthan that of the Gallager insertion channel, and quantifies the difference in\nthe asymptotic regime.",
      "categories": [
        "cs.IT",
        "math.IT"
      ],
      "published": "2024-11-22T07:22:26+00:00",
      "url": "http://arxiv.org/pdf/2411.14771v3",
      "resource_uri": "arxiv://2411.14771v3"
    },
    {
      "id": "1804.11017v1",
      "title": "Site-Directed Insertion: Decision Problems, Maximality and Minimality",
      "authors": [
        "Da-Jung Cho",
        "Yo-Sub Han",
        "Kai Salomaa",
        "Taylor J. Smith"
      ],
      "abstract": "Site-directed insertion is an overlapping insertion operation that can be\nviewed as analogous to the overlap assembly or chop operations that concatenate\nstrings by overlapping a suffix and a prefix of the argument strings. We\nconsider decision problems and language equations involving site-directed\ninsertion. By relying on the tools provided by semantic shuffle on trajectories\nwe show that one variable equations involving site-directed insertion and\nregular constants can be solved. We consider also maximal and minimal variants\nof the site-directed insertion operation.",
      "categories": [
        "cs.FL"
      ],
      "published": "2018-04-30T01:46:04+00:00",
      "url": "http://arxiv.org/pdf/1804.11017v1",
      "resource_uri": "arxiv://1804.11017v1"
    },
    {
      "id": "2311.09794v1",
      "title": "On the Non-Locality of Edge Insertions",
      "authors": [
        "Florestan Brunck"
      ],
      "abstract": "We challenge the idea that edge insertions are local improvement operations\nand show that the edge-insertion algorithm must sometimes insert an edge\nbetween vertices that are at the farthest combinatorial distance apart, and\nthat this edge must also cross linearly many edges of the triangulation for the\nalgorithm to escape a local optimum and return the optimal triangulation.",
      "categories": [
        "cs.CG",
        "68U05",
        "G.2.0"
      ],
      "published": "2023-11-16T11:18:46+00:00",
      "url": "http://arxiv.org/pdf/2311.09794v1",
      "resource_uri": "arxiv://2311.09794v1"
    },
    {
      "id": "1902.03249v1",
      "title": "Insertion Transformer: Flexible Sequence Generation via Insertion Operations",
      "authors": [
        "Mitchell Stern",
        "William Chan",
        "Jamie Kiros",
        "Jakob Uszkoreit"
      ],
      "abstract": "We present the Insertion Transformer, an iterative, partially autoregressive\nmodel for sequence generation based on insertion operations. Unlike typical\nautoregressive models which rely on a fixed, often left-to-right ordering of\nthe output, our approach accommodates arbitrary orderings by allowing for\ntokens to be inserted anywhere in the sequence during decoding. This\nflexibility confers a number of advantages: for instance, not only can our\nmodel be trained to follow specific orderings such as left-to-right generation\nor a binary tree traversal, but it can also be trained to maximize entropy over\nall valid insertions for robustness. In addition, our model seamlessly\naccommodates both fully autoregressive generation (one insertion at a time) and\npartially autoregressive generation (simultaneous insertions at multiple\nlocations). We validate our approach by analyzing its performance on the WMT\n2014 English-German machine translation task under various settings for\ntraining and decoding. We find that the Insertion Transformer outperforms many\nprior non-autoregressive approaches to translation at comparable or better\nlevels of parallelism, and successfully recovers the performance of the\noriginal Transformer while requiring only logarithmically many iterations\nduring decoding.",
      "categories": [
        "cs.CL",
        "cs.LG",
        "stat.ML"
      ],
      "published": "2019-02-08T19:00:04+00:00",
      "url": "http://arxiv.org/pdf/1902.03249v1",
      "resource_uri": "arxiv://1902.03249v1"
    },
    {
      "id": "2505.13904v2",
      "title": "Learning to Insert for Constructive Neural Vehicle Routing Solver",
      "authors": [
        "Fu Luo",
        "Xi Lin",
        "Mengyuan Zhong",
        "Fei Liu",
        "Zhenkun Wang",
        "Jianyong Sun",
        "Qingfu Zhang"
      ],
      "abstract": "Neural Combinatorial Optimisation (NCO) is a promising learning-based\napproach for solving Vehicle Routing Problems (VRPs) without extensive manual\ndesign. While existing constructive NCO methods typically follow an\nappending-based paradigm that sequentially adds unvisited nodes to partial\nsolutions, this rigid approach often leads to suboptimal results. To overcome\nthis limitation, we explore the idea of insertion-based paradigm and propose\nLearning to Construct with Insertion-based Paradigm (L2C-Insert), a novel\nlearning-based method for constructive NCO. Unlike traditional approaches,\nL2C-Insert builds solutions by strategically inserting unvisited nodes at any\nvalid position in the current partial solution, which can significantly enhance\nthe flexibility and solution quality. The proposed framework introduces three\nkey components: a novel model architecture for precise insertion position\nprediction, an efficient training scheme for model optimization, and an\nadvanced inference technique that fully exploits the insertion paradigm's\nflexibility. Extensive experiments on both synthetic and real-world instances\nof the Travelling Salesman Problem (TSP) and Capacitated Vehicle Routing\nProblem (CVRP) demonstrate that L2C-Insert consistently achieves superior\nperformance across various problem sizes.",
      "categories": [
        "cs.LG",
        "cs.AI",
        "cs.RO",
        "math.OC"
      ],
      "published": "2025-05-20T04:10:50+00:00",
      "url": "http://arxiv.org/pdf/2505.13904v2",
      "resource_uri": "arxiv://2505.13904v2"
    },
    {
      "id": "2303.03614v1",
      "title": "A Fast Insertion Operator for Ridesharing over Time-Dependent Road Networks",
      "authors": [
        "Zengyang Gong",
        "Yuxiang Zeng",
        "Lei Chen"
      ],
      "abstract": "Ridesharing has become a promising travel mode recently due to the economic\nand social benefits. As an essential operator, \"insertion operator\" has been\nextensively studied over static road networks. When a new request appears, the\ninsertion operator is used to find the optimal positions of a worker's current\nroute to insert the origin and destination of this request and minimize the\ntravel time of this worker. Previous works study how to conduct the insertion\noperation efficiently in static road networks, however, in reality, the route\nplanning should be addressed by considering the dynamic traffic scenario (i.e.,\na time-dependent road network). Unfortunately, existing solutions to the\ninsertion operator become in efficient under this setting. Thus, this paper\nstudies the insertion operator over time-dependent road networks. Specially, to\nreduce the high time complexity $O(n^3)$ of existing solution, we calculate the\ncompound travel time functions along the route to speed up the calculation of\nthe travel time between vertex pairs belonging to the route, as a result time\ncomplexity of an insertion can be reduced to $O(n^2)$. Finally, we further\nimprove the method to a linear-time insertion algorithm by showing that it only\nneeds $O(1)$ time to find the best position of current route to insert the\norigin when linearly enumerating each possible position for the new request's\ndestination. Evaluations on two real-world and large-scale datasets show that\nour methods can accelerate the existing insertion algorithm by up to 25 times.",
      "categories": [
        "cs.DB"
      ],
      "published": "2023-03-07T03:00:26+00:00",
      "url": "http://arxiv.org/pdf/2303.03614v1",
      "resource_uri": "arxiv://2303.03614v1"
    }
  ]
}